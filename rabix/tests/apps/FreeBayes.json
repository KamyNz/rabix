{
    "$$type": "app/tool/docker",
    "wrapper_id": "sbg_freebayes.FreeBayes",
    "docker_image_ref": {
        "image_id": "90bfb39e07892dbc",
        "image_repo": "images.sbgenomics.com/sevenbridges/sbg_freebayes",
        "image_tag": "90bfb39e07892dbc"
    },
    "schema": {
        "$$type": "schema/app/sbgsdk",
        "inputs": [
            {
                "description": "Aligned BAM files", 
                "required": true, 
                "list": true, 
                "id": "read", 
                "types": [
                    "bam"
                ], 
                "name": "Aligned BAM files"
            }, 
            {
                "description": "Reference genome.", 
                "required": true, 
                "list": false, 
                "id": "reference", 
                "types": [
                    "fasta"
                ], 
                "name": "Reference"
            }, 
            {
                "description": "Limit analysis to targets listed in the BED-format file.", 
                "required": false, 
                "list": false, 
                "id": "targets", 
                "types": [
                    "bed"
                ], 
                "name": "Targets"
            }, 
            {
                "description": "Each line of file should list a sample and a population which it is part of. The population-based bayesian inference model will then be partitioned on the basis of the populations.", 
                "required": false, 
                "list": false, 
                "id": "populations", 
                "types": [], 
                "name": "Populations"
            }, 
            {
                "description": "Read a copy number map from the BED file, which has the format: reference sequence, start, end, sample name, copy number ... for each region in each sample which does not have the default copy number as set by --ploidy.", 
                "required": false, 
                "list": false, 
                "id": "cnv_map", 
                "types": [
                    "bed"
                ], 
                "name": "CNV map"
            }, 
            {
                "description": "Use variants reported in VCF file as input to the algorithm. Variants in this file will be treated as putative variants even if there is not enough support in the data to pass input filters.", 
                "required": false, 
                "list": false, 
                "id": "variant_input", 
                "types": [
                    "vcf"
                ], 
                "name": "Variant input"
            }, 
            {
                "description": "When specified, only variant alleles provided in this input VCF will be used for the construction of complex or haplotype alleles.", 
                "required": false, 
                "list": false, 
                "id": "haplotype_basis_alleles", 
                "types": [
                    "vcf"
                ], 
                "name": "Haplotype basis alleles"
            }
        ], 
        "params": [
            {
                "category": "Input/Output parameters", 
                "description": "<chrom>:<start_position>-<end_position> Limit analysis to the specified region, 0-base coordinates, end_position not included (same as BED format).Either '-' or '..' maybe used as a separator.", 
                "default": null, 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "region", 
                "condition": null, 
                "name": "region"
            }, 
            {
                "category": "Input/Output parameters", 
                "description": "Only provide variant calls and genotype likelihoods for sites and alleles which are provided in the VCF input, and provide output in the VCF for all input alleles, not just those which have support in the data. [default = False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "only_use_input_alleles", 
                "condition": null, 
                "name": "Only use input alleles"
            }, 
            {
                "category": "Input/Output parameters", 
                "description": "At sites where genotypes are made over haplotype alleles, provide information about all alleles in output, not only those which are called. [default = False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "report_all_haplotype_alleles", 
                "condition": null, 
                "name": "Report all haplotype alleles"
            }, 
            {
                "category": "Input/Output parameters", 
                "description": "Report even loci which appear to be monomorphic, and report all considered alleles, even those which are not in called genotypes.[default = False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "report_monomorphic", 
                "condition": null, 
                "name": "Report monomorphic loci"
            }, 
            {
                "category": "Reporting", 
                "description": "Report sites if the probability that there is a polymorphism at the site is greater than N. [default: 0.0001]", 
                "min": null, 
                "default": 0.0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "pvar", 
                "condition": null, 
                "name": "pvar"
            }, 
            {
                "category": "Population model", 
                "description": "The expected mutation rate or pairwise nucleotide diversity among the population under analysis. This serves as the single parameter to the Ewens Sampling Formula prior model [default: 0.001]", 
                "min": null, 
                "default": 0.001, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "theta", 
                "condition": null, 
                "name": "theta"
            }, 
            {
                "category": "Population model", 
                "description": "Sets the default ploidy for the analysis to N. [default: 2]", 
                "min": null, 
                "default": 2, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "ploidy", 
                "condition": null, 
                "name": "ploidy"
            }, 
            {
                "category": "Population model", 
                "description": "Assume that samples result from pooled sequencing. Model pooled samples using discrete genotypes across pools. When using this flag, set --ploidy to the number of alleles in each sample. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "pooled_discrete", 
                "condition": null, 
                "name": "pooled discrete"
            }, 
            {
                "category": "Population model", 
                "description": "Output all alleles which pass input filters, regardles of genotyping outcome or model. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "pooled_continuous", 
                "condition": null, 
                "name": "pooled_continuous"
            }, 
            {
                "category": "Reference allele", 
                "description": "This flag includes the reference allele in the analysis as if it is another sample from the same population. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "use_ref_allele", 
                "condition": null, 
                "name": "Ignore reference allele"
            }, 
            {
                "category": "Reference allele", 
                "description": " Assign mapping quality of MQ to the reference allele at each site and base quality of BQ. [default: 100,60]", 
                "default": "100,60", 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "reference_quality_MQ_BQ", 
                "condition": null, 
                "name": "reference-quality MQ,BQ"
            }, 
            {
                "category": "Allele scope", 
                "description": "Ignore SNP alleles.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "no_snps", 
                "condition": null, 
                "name": "Ignore SNPs"
            }, 
            {
                "category": "Allele scope", 
                "description": "Ignore insertion and deletion alleles. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "no_indels", 
                "condition": null, 
                "name": "Ignore indels"
            }, 
            {
                "category": "Allele scope", 
                "description": "Ignore multi-nuceotide polymorphisms, MNPs. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "no_mnps", 
                "condition": null, 
                "name": "Ignore MNPs"
            }, 
            {
                "category": "Allele scope", 
                "description": "Ignore complex events (composites of other classes). [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "no_complex", 
                "condition": null, 
                "name": "Ignore complex events"
            }, 
            {
                "category": "Allele scope", 
                "description": "Evaluate only the best N SNP alleles, ranked by sum of supporting quality scores.  (Set to 0 to use all) [default: 0]", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "use_best_n_alleles", 
                "condition": null, 
                "name": "Use best n alleles"
            }, 
            {
                "category": "Allele scope", 
                "description": "Allow complex alleles with contiguous embedded matches of up to this length. [default: 0]", 
                "min": null, 
                "default": null, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "max_complex_gap", 
                "condition": null, 
                "name": "Max complex gap"
            }, 
            {
                "category": "Allele scope", 
                "description": "Allow haplotype calls with contiguous embedded matches of up to this length. [default: 0]", 
                "min": null, 
                "default": null, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "haplotype_length", 
                "condition": null, 
                "name": "Haplotype llength"
            }, 
            {
                "category": "Allele scope", 
                "description": "When assembling observations across repeats, require the total repeat length at least this many bp.  [default: 5]", 
                "min": null, 
                "default": 5, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_repeat_length", 
                "condition": null, 
                "name": "Minimum repeat length"
            }, 
            {
                "category": "Allele scope", 
                "description": "To detect interrupted repeats, build across sequence until it has entropy > N bits per bp.  [default: 0]", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_repeat_entropy", 
                "condition": null, 
                "name": "Minimum repeat entropy"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude observations which do not fully span the dynamically-determined detection window.  (default, use all observations, dividing partial support across matching haplotypes when generating haplotypes.)", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "no_partial_observations", 
                "condition": null, 
                "name": "No partial observations"
            }, 
            {
                "category": "Input filters", 
                "description": "Turn off left-alignment of indels, which is enabled by default.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "dont_left_align_indels", 
                "condition": null, 
                "name": "No partial observations"
            }, 
            {
                "category": "Input filters", 
                "description": "Include duplicate-marked alignments in the analysis.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "use_duplicate_reads", 
                "condition": null, 
                "name": "Use duplicate reads"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude alignments from analysis if they have a mapping quality less than this parameter.", 
                "min": null, 
                "default": 30, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_mapping_quality", 
                "condition": null, 
                "name": "Min. mapping quality"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude alleles from analysis if their supporting base quality is less than this parameter.", 
                "min": null, 
                "default": 20, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_base_quality", 
                "condition": null, 
                "name": "Min. base quality"
            }, 
            {
                "category": "Input filters", 
                "description": "Consider any allele in which the sum of qualities of supporting observations is at least Q [default: 0]", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_supporting_allele_qsum", 
                "condition": null, 
                "name": "Min supporting allele quality sum"
            }, 
            {
                "category": "Input filters", 
                "description": "Consider any allele in which and the sum of mapping qualities of supporting reads is at least Q.  [default: 0]", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_supporting_mapping_qsum", 
                "condition": null, 
                "name": "Min supporting allele quality sum"
            }, 
            {
                "category": "Input filters", 
                "description": "Count mismatches toward --read-mismatch-limit if the base quality of the mismatch is >= Q.", 
                "min": null, 
                "default": 10, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "mismatch_base_quality_threshold", 
                "condition": null, 
                "name": "Mismatch base quality threshold"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude reads with more than N mismatches where each mismatch has base quality >= mismatch-base-quality-threshold.", 
                "min": null, 
                "default": null, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "read_mismatch_limit", 
                "condition": null, 
                "name": "Read mismatch limit"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude reads with more than N [0,1] fraction of mismatches where each mismatch has base quality >= mismatch-base-quality-threshold.", 
                "min": null, 
                "default": 1.0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "read_max_mismatch_fraction", 
                "condition": null, 
                "name": "Read max mismatch fraction"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude reads with more than N base mismatches, ignoring gaps with quality >= mismatch-base-quality-threshold.", 
                "min": null, 
                "default": 10000000, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "read_snp_limit", 
                "condition": null, 
                "name": "Read snp limit"
            }, 
            {
                "category": "Input filters", 
                "description": "Exclude reads with more than N separate gaps.", 
                "min": null, 
                "default": 10000000, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "read_indel_limit", 
                "condition": null, 
                "name": "Read indel limit"
            }, 
            {
                "category": "Input filters", 
                "description": "Use stringent input base and mapping quality filters. Equivalent to -m 30 -q 20 -R 0 -S 0.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "standard_filters", 
                "condition": null, 
                "name": "Standard filters"
            }, 
            {
                "category": "Input filters", 
                "description": "Require at least this fraction of observations supporting an alternate allele within a single individual in the in order to evaluate the position.", 
                "min": null, 
                "default": 0.2, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "min_alternate_fraction", 
                "condition": null, 
                "name": "Min alternate fraction"
            }, 
            {
                "category": "Input filters", 
                "description": "Require at least this count of observations supporting an alternate allele within a single individual in order to evaluate the position.", 
                "min": null, 
                "default": 2, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_alternate_count", 
                "condition": null, 
                "name": "Min alternate count"
            }, 
            {
                "category": "Input filters", 
                "description": "Require at least this sum of quality of observations supporting an alternate allele within a single individual in order to evaluate the position.", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_alternate_qsum", 
                "condition": null, 
                "name": "Min alternate qsum"
            }, 
            {
                "category": "Input filters", 
                "description": "Require at least this count of observations supporting an alternate allele within the total population in order to use the allele in analysis.", 
                "min": null, 
                "default": 1, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_alternate_total", 
                "condition": null, 
                "name": "Min alternate total"
            }, 
            {
                "category": "Input filters", 
                "description": "Require at least this coverage to process a site. [default: 0]", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "min_coverage", 
                "condition": null, 
                "name": "Min coverage"
            }, 
            {
                "category": "Bayesian priors", 
                "description": "Equivalent to --pooled --no-ewens-priors. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "no_population_priors", 
                "condition": null, 
                "name": "No population priors"
            }, 
            {
                "category": "Bayesian priors", 
                "description": "Disable estimation of the probability of the combination arising under HWE given the allele frequency as estimated by observation frequency.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "hwe_priors_off", 
                "condition": null, 
                "name": "Hwe-priors off"
            }, 
            {
                "category": "Observation prior expectations", 
                "description": "Disable incorporation of prior expectations about observations. Uses read placement probability, strand balance probability, and read position (5'-3') probability.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "binomial_obs_priors", 
                "condition": null, 
                "name": "Binomial observation priors"
            }, 
            {
                "category": "Observation prior expectations", 
                "description": " Disable use of aggregate probability of observation balance between alleles as a component of the priors.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "allele_balance_priors_off", 
                "condition": null, 
                "name": "Disable allele balance priors"
            }, 
            {
                "category": "Observation prior expectations", 
                "description": " Use legacy model to generate genotype likelihoods.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "standard_gls", 
                "condition": null, 
                "name": "Legacy genotype likelihoods"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Limit estimated observation quality by capping base quality at Q..", 
                "min": null, 
                "default": null, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "base_quality_cap", 
                "condition": null, 
                "name": "Base quality cap"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "An estimate of contamination to use for all samples.  default: 10e-9.", 
                "min": null, 
                "default": 1e-09, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "prob_contamination", 
                "condition": null, 
                "name": "Contamination probability"
            }, 
            {
                "category": "Observation prior expectations", 
                "description": "Report genotypes using the maximum-likelihood estimate provided from genotype likelihoods.", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "report_genotype_likelihood_max", 
                "condition": null, 
                "name": "Genotype maximum likelihoods"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Iterate no more than N times during genotyping step.", 
                "min": null, 
                "default": 1000, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "genotyping_max_iterations", 
                "condition": null, 
                "name": "Genotyping max iterations"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Integrate no deeper than the Nth best genotype by likelihood when genotyping.", 
                "min": null, 
                "default": 6, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "genotyping_max_banddepth", 
                "condition": null, 
                "name": "Genotyping max banddepth"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Integrate all genotype combinations in our posterior space which include no more than N samples with their Mth best data likelihood.", 
                "default": "1,3", 
                "pattern": null, 
                "required": false, 
                "list": false, 
                "type": "string", 
                "id": "posterior_integration_limits_N_M", 
                "condition": null, 
                "name": "Posterior integration limits N,M"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Skip sample genotypings for which the sample has no supporting reads. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "exclude_unobserved_genotypes", 
                "condition": null, 
                "name": "Exclude unobserved genotypes"
            }, 
            {
                "category": "Algorithmic features", 
                "description": " Limit posterior integration to samples where the second-best genotype likelihood is no more than log(N) from the highest genotype likelihood for the sample. ", 
                "min": null, 
                "default": 0, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "integer", 
                "id": "genotype_variant_threshold", 
                "condition": null, 
                "name": "Genotype variant threshold"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Use mapping quality of alleles when calculating data likelihoods. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "use_mapping_quality", 
                "condition": null, 
                "name": "Use mapping quality"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Use a weighted sum of base qualities around an indel, scaled by the distance from the indel.  By default use a minimum BQ in flanking sequence. [default: False]", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "harmonic_indel_quality", 
                "condition": null, 
                "name": "Harmonic indel quality"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Incorporate non-independence of reads by scaling successive observations by this factor during data likelihood calculations.", 
                "min": null, 
                "default": 0.9, 
                "max": null, 
                "required": false, 
                "list": false, 
                "step": null, 
                "type": "float", 
                "id": "read_dependence_factor", 
                "condition": null, 
                "name": "Read dependence factor"
            }, 
            {
                "category": "Algorithmic features", 
                "description": "Calculate the marginal probability of genotypes and report as GQ in each sample field in the VCF output", 
                "default": false, 
                "required": false, 
                "list": false, 
                "type": "boolean", 
                "id": "genotype_qualities", 
                "condition": null, 
                "name": "Genotype qualities"
            }
        ], 
        "outputs": [
            {
                "description": "A raw, unfiltered, highly specific callset in VCF format.", 
                "required": false, 
                "list": false, 
                "id": "vcf", 
                "types": [
                    "vcf"
                ], 
                "name": "vcf"
            }
        ]
    }
}