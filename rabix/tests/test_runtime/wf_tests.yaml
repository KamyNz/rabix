# Workflow tests. Equivalent to wf_tests.json
# Dereference all $ref pointers then look at "tests" object
# Each test has a "job" to run and expected "outputs"
# For expected failures, "fails" is truthy value with reason
# "requiresFeatures" is a list of following feature requirements (to allow testing partial conformance):
#  map - support for parallel-for-each on single port
#  multilink - support for multiple incoming data links to same port

tools:
  add:
    "@type": Script
    inputs:
      type: object
      properties:
        a:
          type: integer
        b:
          type: integer
    outputs:
      type: object
      properties:
        c:
          type: integer
    script: "{c: $job.inputs.a + $job.inputs.b}"

  mul:
    "@type": Script
    inputs:
      type: object
      properties:
        a:
          type: integer
        b:
          type: integer
    outputs:
      type: object
      properties:
        c:
          type: integer
    script: "{c: $job.inputs.a * $job.inputs.b}"

  sum:
    "@type": Script
    inputs:
      type: object
      properties:
        arr:
          type: array
          items:
            type: integer
    outputs:
      sum:
        type: integer
    script: |
      {var result = 0;
      for (var i = 0; i < $job.inputs.arr.length; i++) {
        result += $job.inputs.arr[i];
      }
      return {sum: result};}


workflows:
  add_one_mul_two:
    "@type": Workflow
    steps:
      - id: add_one
        app:
          $ref: "#tools/add"
        inputs:
          a:
            $from: a
          b: 1
      - id: times_two
        app:
          $ref: "#tools/mul"
        inputs:
          a:
            $from: add_one.c
          b: 2
        outputs:
          c:
            $to: result

  add_mul_sum:
    "@type": Workflow
    steps:
      - id: add_mul
        app:
          $ref: "#workflows/add_one_mul_two"
        inputs:
          a:
            $from: a
      - id: sum
        app:
          $ref: "#/tools/sum"
        inputs:
          arr:
            $from: add_mul.result
        outputs:
          sum:
            $to: result

  multi_link_sum:
    "@type": Workflow
    steps:
      - id: sum
        app:
          $ref: "#tools/sum"
          inputs:
            arr:
              $from: [a, b]
          outputs:
            sum:
              $to: result

jobs:
  simple_sum:
    "@type": Job
    app:
      $ref: "#tools/sum"
    inputs:
      arr: [1, 2, 3]

  simple_add_mul:
    "@type": Job
    app:
      $ref: "#workflows/add_one_mul_two"
    inputs:
      a: 1

  multi_link_sum:
    "@type": Job
    app:
      $ref: "#workflows/multi_link_sum"
    inputs:
      a: 1
      b: 1

  batch_add_one_mul_two:
    "@type": Job
    app:
      $ref: "#workflows/add_one_mul_two"
    inputs:
      a: [1, 2, 3]

  add_mul_sum:
    "@type": Job
    app:
      $ref: "#workflows/add_mul_sum"
    inputs:
      a: [1, 2, 3]

tests:
  simple_sum:
    "@type": Test
    job:
      $ref: "#jobs/simple_sum"
    outputs:
      sum: 6

  simple_add_mul:
    "@type": Test
    job:
      $ref: "#jobs/simple_add_mul"
    outputs:
      result: 4

  multi_link_sum:
    "@type": Test
    job:
      $ref: "#jobs/multi_link_sum"
    outputs:
      result: 2

  batch_add_one_mul_two:
    "@type": Test
    job:
      $ref: "#jobs/batch_add_one_mul_two"
    outputs:
      result: [4, 6, 8]
    requiresFeatures: [map]

  add_mul_sum:
    "@type": Test
    job:
      $ref: "#jobs/add_mul_sum"
    outputs:
      result: 18
    requiresFeatures: [map]
